<#.Synopsis   Gets the SQL Agent Job History with dynamic parameters.DESCRIPTION   Outputs the SQL Agent Job History with dynamic parameters to Out GridView.EXAMPLE   Get-DBASQLAgentJobHistory -Server SERVER -JobName 'DatabaseIntegrityCheck - USER_DATABASES'    Gets the SQL Agent Job History and outputs to Out-Gridview for the job DatabaseIntegrityCheck - USER_DATABASES   which is dynamically provided.EXAMPLE      Get-DBASQLAgentJobHistory -Server SERVER -JobName 'DatabaseIntegrityCheck - USER_DATABASES' -Since Yesterday   Gets the SQL Agent Job History since yesterday and outputs to Out-Gridview for the job DatabaseIntegrityCheck - USER_DATABASES   which is dynamically provided.NOTES   AUTHOR - Rob Sewell https://sqldbawithabeard.com   DATE - 14/02/2017#>#Requires -Version 5 #Requires -Module sqlserver  function Get-DBASQLAgentJobHistory{    Param    (        # the Server/instance Name        [Parameter(Mandatory=$true,                    ValueFromPipeline=$true,                   ValueFromPipelineByPropertyName=$true,                    ValueFromRemainingArguments=$false,                    Position=0)]        [ValidateNotNull()]        [ValidateNotNullOrEmpty()]         $Server,        # Restricts the Job History        [Parameter(Mandatory=$false)]        [ValidateSet("Midnight", "Yesterday", "LastWeek","LastMonth")]        $Since        )    DynamicParam {            # Set the dynamic parameters' name            $ParameterName = 'JobName'                        # Create the dictionary             $RuntimeParameterDictionary = New-Object -TypeName System.Management.Automation.RuntimeDefinedParameterDictionary            # Create the collection of attributes            $AttributeCollection = New-Object -TypeName System.Collections.ObjectModel.Collection[System.Attribute]                        # Create and set the parameters' attributes            $ParameterAttribute = New-Object -TypeName System.Management.Automation.ParameterAttribute            $ParameterAttribute.Mandatory = $true            $ParameterAttribute.Position = 1            # Add the attributes to the attributes collection            $AttributeCollection.Add($ParameterAttribute)            # Generate and set the ValidateSet             $arrSet = (Get-SQLAgentJob -ServerInstance $Server).Name            $ValidateSetAttribute = New-Object -TypeName System.Management.Automation.ValidateSetAttribute -ArgumentList ($arrSet)            # Add the ValidateSet to the attributes collection            $AttributeCollection.Add($ValidateSetAttribute)            # Create and return the dynamic parameter            $RuntimeParameter = New-Object -TypeName System.Management.Automation.RuntimeDefinedParameter -ArgumentList ($ParameterName, [string], $AttributeCollection)            $RuntimeParameterDictionary.Add($ParameterName, $RuntimeParameter)            return $RuntimeParameterDictionary    }    begin {        # Bind the parameter to a friendly variable        $JobName = $PsBoundParameters[$ParameterName]    }    Process    {         $Job = Get-SQLAgentJob -ServerInstance $Server -Name $JobName         if($Since)         {         Get-SqlAgentJobHistory -ServerInstance $($Job.OriginatingServer) -JobID $($job.JobID) -Since $Since | Out-GridView         }         else         {         Get-SqlAgentJobHistory -ServerInstance $($Job.OriginatingServer) -JobID $($job.JobID) | Out-GridView         }    }    End    {    }}
